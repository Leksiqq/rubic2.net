//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubik2Console.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubik2Console.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Color index {0} is out o range 0..23!.
        /// </summary>
        internal static string ColorIndexOutOfRange {
            get {
                return ResourceManager.GetString("ColorIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Demo.
        /// </summary>
        internal static string Demo {
            get {
                return ResourceManager.GetString("Demo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A source state must have {0} color charactes, but has {1}!.
        /// </summary>
        internal static string InvalidSourceCharsCount {
            get {
                return ResourceManager.GetString("InvalidSourceCharsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A target state must have {0} color charactes, but has {1}!.
        /// </summary>
        internal static string InvalidTargetCharsCount {
            get {
                return ResourceManager.GetString("InvalidTargetCharsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The source is incomplete!.
        /// </summary>
        internal static string SourceIncomplete {
            get {
                return ResourceManager.GetString("SourceIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;source options&gt; are mandatory!.
        /// </summary>
        internal static string SourceMissed {
            get {
                return ResourceManager.GetString("SourceMissed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The source is wrong!.
        /// </summary>
        internal static string SourceWrong {
            get {
                return ResourceManager.GetString("SourceWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The state is incomplete!.
        /// </summary>
        internal static string StateIncomplete {
            get {
                return ResourceManager.GetString("StateIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The state is wrong!.
        /// </summary>
        internal static string StateWrong {
            get {
                return ResourceManager.GetString("StateWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;target options&gt; and &lt;instruction options&gt; are mutually exclusive!.
        /// </summary>
        internal static string TargetAndIsntructionsMutuallyExclusive {
            get {
                return ResourceManager.GetString("TargetAndIsntructionsMutuallyExclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The target is incomplete!.
        /// </summary>
        internal static string TargetIncomplete {
            get {
                return ResourceManager.GetString("TargetIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The target is unreachable!.
        /// </summary>
        internal static string TargetUnreachable {
            get {
                return ResourceManager.GetString("TargetUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The target is wrong!.
        /// </summary>
        internal static string TargetWrong {
            get {
                return ResourceManager.GetString("TargetWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unexpected argument: {0}!.
        /// </summary>
        internal static string UnexpectedArgument {
            get {
                return ResourceManager.GetString("UnexpectedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unexpected color character: &apos;{0}&apos;!.
        /// </summary>
        internal static string UnexpectedColorChar {
            get {
                return ResourceManager.GetString("UnexpectedColorChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unexpected instruction &apos;{0}&apos;!.
        /// </summary>
        internal static string UnexpectedInstruction {
            get {
                return ResourceManager.GetString("UnexpectedInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Usage: 
        ///  {0} &lt;source options&gt; [&lt;target options&gt;|&lt;instruction options&gt;] [/v] [/?]
        ///
        ///  &lt;source options&gt;:
        ///    /f &lt;file&gt;          read source from file &lt;file&gt;
        ///    /s &lt;string&gt;        read source from string &lt;string&gt;
        ///
        ///  &lt;target options&gt;:
        ///    /tf &lt;file&gt;          read target from file &lt;file&gt;
        ///    /ts &lt;string&gt;        read target from string &lt;string&gt;
        ///
        ///  &lt;instruction options&gt;
        ///    /if &lt;file&gt;          read instruction from file &lt;file&gt;
        ///    /is &lt;string&gt;          read instruction from string &lt;string&gt;
        ///
        ///  /v    [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}
